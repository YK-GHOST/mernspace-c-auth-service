name: CI
on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main
jobs:
    lint-and-test:
        name: Lint and Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: |
                      **/node_modules
                      **/.cache
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              run: npm ci

            - name: Run eslint
              run: npm run lint:check

            - name: Run tests with coverage
              run: npm run test

            - name: Build TypeScript
              run: npm run build

            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-and-push-docker:
        name: Build and Push Docker Image
        # needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: ghost20yk/mernspace-c-auth-service
            IMAGE_TAG: build-${{ github.run_number }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Log in to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: Build Docker image
              run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} --platform linux/amd64 -f docker/production/Dockerfile .
            - name: Push Docker image to Docker Hub
              run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
